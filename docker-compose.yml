version: "3"

services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    image: config/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini`
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - ${WEB_SERVER_PORT}:80
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service 8.0
  db:
    image: 'mysql:8.0'
    volumes:
      - ./data:/var/lib/mysql
    ports:
      - ${DB_PORT_EXTERNAL}:${DB_PORT}
    command: --max_allowed_packet=39505856
    container_name: db
    restart: unless-stopped
    tty: true
    environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_ROOT_USER=root
        - MYSQL_DATABASE=test
        - MYSQL_USER=root
        - MYSQL_PASSWORD=root
        - MYSQL_TCP_PORT=3307
    networks:
      - app-network

  #MySQL Service 8.0
  db_test:
    image: 'mysql:8.0'
    ports:
      - ${DB_PORT_EXTERNAL_TEST}:${DB_PORT_TEST}
    container_name: db_test
    restart: unless-stopped
    tty: true
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD_TEST}
      - MYSQL_ROOT_USER=${DB_USERNAME_TEST}
      - MYSQL_DATABASE=${DB_DATABASE_TEST}
      - MYSQL_TCP_PORT=${DB_PORT_TEST}
    networks:
      - app-network

  #RabbitMQ Service 3.0
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    environment:
       - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
       - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    networks:
      - app-network

volumes:
  dbdata:
    driver: local

networks:
  app-network:
    driver: bridge
